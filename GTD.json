{"paragraphs":[{"text":"%md \nLoad Data.","dateUpdated":"2018-11-19T00:55:40+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","tableHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542500590392_-1298367251","id":"20181114-074825_1744182261","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Load Data.</p>\n"},"dateCreated":"2018-11-18T00:23:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:428","dateFinished":"2018-11-19T00:46:33+0000","dateStarted":"2018-11-19T00:46:33+0000","focus":true},{"text":"%pyspark\ndataLableRDD =  sc.textFile(\"/user/maria_dev/Data/globalterrorismdb_0718dist_10.csv\");\ndataRDD = dataLableRDD.filter(lambda x: \"iyear\" not in x);\nlol = dataLableRDD.take(1)\n#print(dataRDD.count())\n#print(lol)\n#print(lol[0].split('`').index(\"gname\"))\nlol1 = dataRDD.take(2);\nprint(dataRDD.count())\nlol2 = lol1[0].split('`');\n#print(lol2[59])\ndata=dataRDD.filter(lambda x: x.split(\"`\")[59] != \"Unknown\")\n#removed all the Unknow form col: gname\ndata2 = data.filter(lambda x: len(x.split(\"`\")) == 136)\n#print(data2.count())\n#print(data.count())\n","dateUpdated":"2018-11-19T00:46:31+0000","config":{"lineNumbers":true,"tableHide":false,"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":false,"graph":{"mode":"table","height":85.91999816894531,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542500590392_-1298367251","id":"20181114-074946_1051648732","result":{"code":"SUCCESS","type":"TEXT","msg":"181691\n"},"dateCreated":"2018-11-18T00:23:10+0000","dateStarted":"2018-11-18T03:56:05+0000","dateFinished":"2018-11-18T03:56:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:429"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542588249274_-1848214460","id":"20181119-004409_1714566069","dateCreated":"2018-11-19T00:44:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1213","text":"%md\n\n#Toatal Number reocords  :181691\n#The dataset contains a huge number of \"Unknown\"s in Group Name.\n","dateUpdated":"2018-11-19T00:49:03+0000","dateFinished":"2018-11-19T00:48:57+0000","dateStarted":"2018-11-19T00:48:57+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Toatal Number reocords  :181691</h1>\n<h1>The dataset contains a huge number of &ldquo;Unknown\"s in Group Name.</h1>\n"}},{"text":"%pyspark \n indexOfWeaptype=lol[0].split('`').index(\"weaptype1_txt\")\nprint(indexOfWeaptype)\ndef checkVehicle(x):\n    if x.split(\"`\")[83]== \"Vehicle (not to include vehicle-borne explosives, i.e., car or truck bombs)\":\n        return x.replace(\"Vehicle (not to include vehicle-borne explosives, i.e., car or truck bombs)\",\"Vehicle\")\n    else: return x \ndata=data.map(checkVehicle)\ndatatemp= data.filter(lambda x: x.split(\"`\")[83] == \"Vehicle\")\n# replace string \"Vehicle (not to include vehicle-borne explosives, i.e., car or truck bombs)\" to just \"Vehicle\"\n#print(data.count())\n#print(datatemp.count())\n\n\n","dateUpdated":"2018-11-18T03:56:13+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","graph":{"mode":"table","height":351,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542500590393_-1298752000","id":"20181114-112107_1676380624","result":{"code":"SUCCESS","type":"TEXT","msg":"83\n"},"dateCreated":"2018-11-18T00:23:10+0000","dateStarted":"2018-11-18T03:56:13+0000","dateFinished":"2018-11-18T03:56:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:430"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542588426638_-1795025522","id":"20181119-004706_706510192","dateCreated":"2018-11-19T00:47:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1394","text":"%md\n\n#Replaced value \"Vehicle (not to include vehicle-borne explosives, i.e., car or truck bombs)\" to \"Vehicle\" in Column weaptype1","dateUpdated":"2018-11-19T00:49:15+0000","dateFinished":"2018-11-19T00:49:11+0000","dateStarted":"2018-11-19T00:49:11+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Replaced value &ldquo;Vehicle (not to include vehicle-borne explosives, i.e., car or truck bombs)&rdquo; to &ldquo;Vehicle&rdquo; in Column weaptype1</h1>\n"}},{"text":"%pyspark  \n\n#indexOfprovstate=lol[0].split('`').index(\"provstate\")\n#indexOfCity  = lol[0].split('`').index(\"city\")\n#print(indexOfprovstate)\n#print(data.count())\n#print(indexOfCity)\ndef checkVehicle(x):\n    if ((x.split(\"`\")[12]== \"Unknown\" )|( x.split(\"`\")[12] == \"\") ) & (x.split(\"`\")[13]!=\"Unknown\"):\n        x = x.split(\"`\") \n        x[12]=x[13]\n        return \"`\".join(x)\n    else: return x \ndata=data.map(checkVehicle)\n\n#print(data.count())\nfdata = data.filter(lambda x : (x.split(\"`\")[20] == \"1\") and  (x.split(\"`\")[21] == \"1\") and ( x.split(\"`\")[22] == \"1\") and ( x.split(\"`\")[23] == \"0.0\") )\nprint(fdata.count())\n#Keep rows that are terrorist attacks for sure","dateUpdated":"2018-11-18T03:56:15+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":105.91999816894531,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542500590393_-1298752000","id":"20181114-180920_1823268445","result":{"code":"SUCCESS","type":"TEXT","msg":"77216\n"},"dateCreated":"2018-11-18T00:23:10+0000","dateStarted":"2018-11-18T03:56:15+0000","dateFinished":"2018-11-18T03:56:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:431"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542588569037_-1826210965","id":"20181119-004929_636117245","dateCreated":"2018-11-19T00:49:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1518","text":"%md\n\n#In the column provstate, there are few rows with lable \"Unknown\" or \"\"(NULL) are present where in the sublocation colomn had value in it so replaced all such records. \n#Moreover, Keep rows that are terrorist attacks for sure (x.20=1|x.21=1|x.22=1|x.23=0)\n\nFiltered Records: 77216","dateUpdated":"2018-11-19T00:55:31+0000","dateFinished":"2018-11-19T00:54:29+0000","dateStarted":"2018-11-19T00:54:29+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>In the column provstate, there are few rows with lable &ldquo;Unknown&rdquo; or &ldquo;&ldquo;(NULL) are present where in the sublocation colomn had value in it so replaced all such records.</h1>\n<h1>Moreover, Keep rows that are terrorist attacks for sure (x.20=1|x.21=1|x.22=1|x.23=0)</h1>\n<p>Filtered Records: 77216</p>\n"}},{"text":"%pyspark\n\n#print(fdata.take(2))\ndef selectFeature(x):\n    x= x.split(\"`\")\n    return (x[2],x[3],x[4],x[6],x[8],x[10],x[12],x[14],x[15],x[17],x[20],x[21],x[22],x[23],x[29],x[35],x[59],x[82])\n    \nselectedFRDD = fdata.map(selectFeature)\nprint(selectedFRDD.take(1))\n","dateUpdated":"2018-11-18T03:56:34+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542500590394_-1297597753","id":"20181115-091605_747225672","result":{"code":"SUCCESS","type":"TEXT","msg":"[(u'1970', u'7', u'2', u'0', u'58', u'2', u'Santo Domingo', u'18.456792', u'-69.951164', u'0', u'1', u'1', u'1', u'0.0', u'1', u'14', u'MANO-D', u'13')]\n"},"dateCreated":"2018-11-18T00:23:10+0000","dateStarted":"2018-11-18T03:56:34+0000","dateFinished":"2018-11-18T03:56:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:432"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542588883562_1454049244","id":"20181119-005443_1464652290","dateCreated":"2018-11-19T00:54:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1605","text":"%md\n\n#remove all the unnecessary Col.","dateUpdated":"2018-11-19T00:55:28+0000","dateFinished":"2018-11-19T00:55:19+0000","dateStarted":"2018-11-19T00:55:19+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>remove all the unnecessary Col.</h1>\n"}},{"text":"%pyspark\nfrom pyspark.sql.types import *\nschema = StructType([\n        StructField(\"iyear\", StringType(), True),\n        StructField(\"imonth\", StringType(), True),\n        StructField(\"iday\", StringType(), True),\n        StructField(\"extended\",  StringType(), True),\n        StructField(\"country\", StringType(), True),\n        StructField(\"region\", StringType(), True),\n        StructField(\"provstate\", StringType(), True),\n        StructField(\"latitude\",  StringType(), True),\n        StructField(\"longitude\", StringType(), True),\n        StructField(\"vicinity\", StringType(), True),\n        StructField(\"crit1\", StringType(), True),\n        StructField(\"crit2\",  StringType(), True),\n        StructField(\"crit3\", StringType(), True),\n        StructField(\"doubtterr\", StringType(), True),\n        StructField(\"attacktype1\", StringType(), True),\n        StructField(\"targtype1\",  StringType(), True),\n        StructField(\"gname\", StringType(), True),\n        StructField(\"weaptype1\",  StringType(), True)\n    ])\ndf = sqlContext.createDataFrame(selectedFRDD,schema)\n\nchangedTypedf = df.withColumn(\"iyear\", df[\"iyear\"].cast(IntegerType()))\nchangedTypedf = changedTypedf.withColumn(\"imonth\", changedTypedf[\"imonth\"].cast(IntegerType()))\nchangedTypedf = changedTypedf.withColumn(\"iday\", changedTypedf[\"iday\"].cast(IntegerType()))\nchangedTypedf = changedTypedf.withColumn(\"extended\", changedTypedf[\"extended\"].cast(IntegerType()))\nchangedTypedf = changedTypedf.withColumn(\"country\", changedTypedf[\"country\"].cast(IntegerType()))\nchangedTypedf = changedTypedf.withColumn(\"region\", changedTypedf[\"region\"].cast(IntegerType()))\nchangedTypedf = changedTypedf.withColumn(\"provstate\", changedTypedf[\"provstate\"].cast(StringType()))\nchangedTypedf = changedTypedf.withColumn(\"latitude\", changedTypedf[\"latitude\"].cast(FloatType()))\nchangedTypedf = changedTypedf.withColumn(\"longitude\", changedTypedf[\"longitude\"].cast(DoubleType()))\nchangedTypedf = changedTypedf.withColumn(\"vicinity\", changedTypedf[\"vicinity\"].cast(IntegerType()))\nchangedTypedf = changedTypedf.withColumn(\"crit1\", changedTypedf[\"crit1\"].cast(IntegerType()))\nchangedTypedf = changedTypedf.withColumn(\"crit2\", changedTypedf[\"crit2\"].cast(IntegerType()))\nchangedTypedf = changedTypedf.withColumn(\"crit3\", changedTypedf[\"crit3\"].cast(IntegerType()))\nchangedTypedf = changedTypedf.withColumn(\"doubtterr\", changedTypedf[\"doubtterr\"].cast(IntegerType()))\nchangedTypedf = changedTypedf.withColumn(\"attacktype1\", changedTypedf[\"attacktype1\"].cast(IntegerType()))\nchangedTypedf = changedTypedf.withColumn(\"targtype1\", changedTypedf[\"targtype1\"].cast(IntegerType()))\nchangedTypedf = changedTypedf.withColumn(\"gname\", changedTypedf[\"gname\"].cast(StringType()))\nchangedTypedf = changedTypedf.withColumn(\"weaptype1\", changedTypedf[\"weaptype1\"].cast(IntegerType()))\n\n#df.show(5)\n#changedTypedf.printSchema()\n#changedTypedf.registerTempTable(\"temp\");\n#countDF =  sqlContext.sql(\"select count(gname) as countfor,gname from temp group by gname \").filter(countfor > 200);\ncoutDF = df.groupby(df.gname).count().filter(\"count>450\")\n#print(coutDF.count())\n#minus the gname record which are also present in the CoutDF.\n\nfilteredDF = df.join(coutDF, ['gname'], 'leftsemi')\n\nfrom pyspark.ml.feature import StringIndexer\nfrom pyspark.mllib.linalg import Vectors\n\nprovstateIndexer = StringIndexer(inputCol=\"provstate\", outputCol=\"provstateIndexed\")\nindexedDF = provstateIndexer.fit(filteredDF).transform(filteredDF)\n#indexedDF.show(5)\n\ndef transform(x):\n    return (x.gname,Vectors.dense([x.iyear,x.imonth,x.iday,x.extended,x.country,x.region,x.vicinity,x.crit1,x.crit2,x.crit3,x.doubtterr,x.attacktype1,x.targtype1,x.weaptype1]))\n    \nvecRDD = indexedDF.rdd.map(transform)\nvecRDD.cache()\nprint(vecRDD.take(2))\n\nvecDF = sqlContext.createDataFrame(vecRDD,[\"label\",\"features\"])\n#print(vecDF.show(2))\nprint(type(vecDF))\n#print(filteredDF.count())\nprint(vecDF.take(1))","dateUpdated":"2018-11-19T01:02:41+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542502776778_-1139404135","id":"20181118-005936_1404812831","result":{"code":"SUCCESS","type":"TEXT","msg":"[(u'Corsican National Liberation Front (FLNC)', DenseVector([1974.0, 3.0, 22.0, 0.0, 69.0, 8.0, 0.0, 1.0, 1.0, 1.0, 0.0, 3.0, 6.0, 6.0])), (u'Corsican National Liberation Front (FLNC)', DenseVector([1976.0, 7.0, 18.0, 0.0, 69.0, 8.0, 0.0, 1.0, 1.0, 1.0, 0.0, 3.0, 2.0, 6.0]))]\n<class 'pyspark.sql.dataframe.DataFrame'>\n[Row(label=u'Corsican National Liberation Front (FLNC)', features=DenseVector([1974.0, 3.0, 22.0, 0.0, 69.0, 8.0, 0.0, 1.0, 1.0, 1.0, 0.0, 3.0, 6.0, 6.0]))]\n"},"dateCreated":"2018-11-18T00:59:36+0000","dateStarted":"2018-11-18T06:37:58+0000","dateFinished":"2018-11-18T06:39:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:433"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542588997436_-843950312","id":"20181119-005637_1123562413","dateCreated":"2018-11-19T00:56:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1746","text":"%md \n#Created DataFrame with Schema containing all the field in the String formate then Changed necessary Col to Integer or Double.\n#Filterd the Outlier(in our case whichever gange has less then 450 record in the database will get removed(explained in the code comments above).)\n","dateUpdated":"2018-11-19T01:02:36+0000","dateFinished":"2018-11-19T01:02:31+0000","dateStarted":"2018-11-19T01:02:31+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Created DataFrame with Schema containing all the field in the String formate then Changed necessary Col to Integer or Double.</h1>\n<h1>Filterd the Outlier(in our case whichever gange has less then 450 record in the database will get removed(explained in the code comments above).)</h1>\n"}},{"text":"%pyspark\n\n#indexedDF.show(50)\n#print(type(vecRDD))\n#print(type(vecDF))\n\nlableIndexer = StringIndexer(inputCol=\"label\", outputCol=\"labelIndexed\")\nfinalDF = lableIndexer.fit(vecDF).transform(vecDF)\n#finalDF.show(5)\n\nfrom pyspark.ml.classification import RandomForestClassifier\nfrom pyspark.ml.feature import VectorIndexer\nfrom pyspark.ml.evaluation import MulticlassClassificationEvaluator\n\n(trainingData, testData) = finalDF.randomSplit([0.85, 0.15])\n#print(trainingData.count())\n#print(testData.count())\n\nrf = RandomForestClassifier(labelCol=\"labelIndexed\",numTrees=100,maxDepth=8)\nrfModel =  rf.fit(trainingData)\npredictions = rfModel.transform(testData)\n\n#predictions.show(5)\nevaluator = MulticlassClassificationEvaluator(labelCol=\"labelIndexed\", predictionCol=\"prediction\")\naccuracy = evaluator.evaluate(predictions)\nprint(\"F1 score = %g\" % ( accuracy))\n\n\n\n#vecDF = sqlContext.createDataFrame(vecRDD,[\"label\",\"features\"])\n#print(vecDF.take(1))","dateUpdated":"2018-11-18T07:41:05+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542504434732_1227949793","id":"20181118-012714_1001201073","result":{"code":"SUCCESS","type":"TEXT","msg":"F1 score = 0.859588\n"},"dateCreated":"2018-11-18T01:27:14+0000","dateStarted":"2018-11-18T07:38:51+0000","dateFinished":"2018-11-18T07:40:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:434"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542589401294_1500154526","id":"20181119-010321_579010633","dateCreated":"2018-11-19T01:03:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1854","text":"%md\n# Trained the model and also evaluate. ","dateUpdated":"2018-11-19T01:04:31+0000","dateFinished":"2018-11-19T01:04:31+0000","dateStarted":"2018-11-19T01:04:31+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Trained the model and also evaluate.</h1>\n"}},{"text":"%pyspark\n\n# this is All time pass\n\nkey = lol[0].split('`').index(\"provstate\")\nprint(key)\nprint(lol[0].split('`')[2])\nprint(lol[0].split('`')[3])\nprint(lol[0].split('`')[4])\nprint(lol[0].split('`')[6])\nprint(lol[0].split('`')[8])\nprint(lol[0].split('`')[10])\nprint(lol[0].split('`')[12])\nprint(lol[0].split('`')[14])\nprint(lol[0].split('`')[15])\nprint(lol[0].split('`')[17])\nprint(lol[0].split('`')[20])\nprint(lol[0].split('`')[21])\nprint(lol[0].split('`')[22])\nprint(lol[0].split('`')[23])\nprint(lol[0].split('`')[29])\nprint(lol[0].split('`')[35])\nprint(lol[0].split('`')[59])\nprint(lol[0].split('`')[82])\n\n\n#print(type(data.take(2)[0].split(\"`\")[23]))\n#print((data.take(1)[0].split(\"`\")[20] == \"1\") &  (data.take(1)[0].split(\"`\")[21] == \"1\") & (data.take(1)[0].split(\"`\")[22] == \"1\") & ( data.take(1)[0].split(\"`\")[23] ==\"0\"))\n\n#print(fdata.take(1))\n#fsdata = fdata.map(lambda x : x.split(\"`\"))\n#df_csv = fsdata.map(lambda p: Row(EmployeeID = int(p[0]), FirstName = p[1], Title=p[2], State=p[3], Laptop=p[4])).toDF()\n#df_csv.show(5)","dateUpdated":"2018-11-19T01:02:52+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false,"editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542500590393_-1298752000","id":"20181115-074955_603914499","result":{"code":"SUCCESS","type":"TEXT","msg":"12\niyear\nimonth\niday\nextended\ncountry\nregion\nprovstate\nlatitude\nlongitude\nvicinity\ncrit1\ncrit2\ncrit3\ndoubtterr\nattacktype1\ntargtype1\ngname\nweaptype1\n"},"dateCreated":"2018-11-18T00:23:10+0000","dateStarted":"2018-11-18T01:17:31+0000","dateFinished":"2018-11-18T01:17:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:435"},{"text":"%pyspark\nchangedTypedf.printSchema()","dateUpdated":"2018-11-19T01:03:01+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/python","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542502392632_-1531764291","id":"20181118-005312_1549109059","result":{"code":"SUCCESS","type":"TEXT","msg":"root\n |-- iyear: integer (nullable = true)\n |-- imonth: integer (nullable = true)\n |-- iday: integer (nullable = true)\n |-- extended: integer (nullable = true)\n |-- country: integer (nullable = true)\n |-- region: integer (nullable = true)\n |-- provstate: string (nullable = true)\n |-- latitude: float (nullable = true)\n |-- longitude: double (nullable = true)\n |-- vicinity: integer (nullable = true)\n |-- crit1: integer (nullable = true)\n |-- crit2: integer (nullable = true)\n |-- crit3: integer (nullable = true)\n |-- doubtterr: integer (nullable = true)\n |-- attacktype1: integer (nullable = true)\n |-- targtype1: integer (nullable = true)\n |-- gname: string (nullable = true)\n |-- weaptype1: integer (nullable = true)\n\n"},"dateCreated":"2018-11-18T00:53:12+0000","dateStarted":"2018-11-18T05:20:08+0000","dateFinished":"2018-11-18T05:20:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:436"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1542518408529_-2103135397","id":"20181118-052008_2066248667","dateCreated":"2018-11-18T05:20:08+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:437"}],"name":"IDontKnow","id":"2DWFBRNTC","angularObjects":{"2BYG9GAN3:shared_process":[],"2C139U1BG:shared_process":[],"2BYWWZJPK:shared_process":[],"2C2VAKPN2:shared_process":[],"2BZC2RPUW:shared_process":[],"2BZQEH9EH:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}